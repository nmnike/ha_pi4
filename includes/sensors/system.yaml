####################################################
#                     SENSORS                      #
####################################################
 - platform: time_date
   display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'time_date'

 - platform: systemmonitor
   resources:
   - type: processor_use
   - type: disk_use_percent
     arg: /
   - type: memory_use_percent
   - type: last_boot
   - type: disk_free
     arg: /  


#SpeedTest
# - platform: speedtest
#   monitored_conditions:
#    - ping
#    - download
#    - upload
#   minute:
#    - 0

# ------------------------------------------------------------------------------
# - Home Assistant Online
# ------------------------------------------------------------------------------
 - platform: uptime
   name: Online
   unit_of_measurement: minutes
 
 - platform: template
   sensors:
     online_custom:
       icon_template: mdi:clock
       value_template: >
         {% set uptime = states.sensor.online.state | int %}
         {% set minutes = (( uptime % 60) / 1) | int %}
         {% set hours = ((uptime % 1440) / 60) | int %}
         {% set days = (uptime / 1440) | int %}
           {% if uptime < 1 %}
             Меньше минуты
           {% else %}
             {% if days > 0 %}
               {{ days }} д.
             {% endif %}
             {% if hours > 0 %}
               {% if days > 0 %}
                 {{ ' ' }}
               {% endif %}
               {{ hours }} ч.
             {% endif %}
             {% if minutes > 0 %}
               {% if days > 0 or hours > 0 %}
                 {{ ' ' }}
               {% endif %}
                 {{ minutes }} мин.
             {% endif %}
           {% endif %}
  
 - platform: template
   sensors:
      last_boot_custom:
        friendly_name: "Последняя перезагрузка"
##        value_template: "{{ now().strftime('%H:%M   %d/%m') }}"
##        value_template: "{{ as_timestamp (now()) -as_timestamp(states.sensor.last_boot.state) | int }}"
        value_template: >
           {% set uptime = as_timestamp (now()) -as_timestamp(states.sensor.last_boot.state) | int %}
           {% set minutes = (( uptime % 3660) / 60) | int %}
           {% set hours = ((uptime % 86400) / 3600) | int %}
           {% set days = (uptime / 86400) | int %}

             {% if uptime < 1 %}
               Меньше минуты
             {% else %}
               {% if days > 0 %}
                 {{ days }} д.
               {% endif %}
               {% if hours > 0 %}
                 {% if days > 0 %}
                   {{ ' ' }}
                 {% endif %}
                 {{ hours }} ч.
               {% endif %}
               {% if minutes > 0 %}
                 {% if days > 0 or hours > 0 %}
                   {{ ' ' }}
                 {% endif %}
                   {{ minutes }} мин.
               {% endif %}
             {% endif %}

# Температура RaspberryPi
 - platform: command_line
   name: cpu_temp
   command: "cat /sys/class/thermal/thermal_zone0/temp"
   unit_of_measurement: "°C"
   value_template: '{{ value | multiply(0.001) | round(1) }}'

# Размер БД
 - platform: command_line
   name: db_file_size
   command: "du -m /config/home-assistant_v2.db | cut -f1"
   unit_of_measurement: 'MB'
   value_template: '{{ value | int - 1 }}'
   scan_interval: 3600
 
# Новая версия HA
 - platform: rest
   resource: https://pypi.python.org/pypi/homeassistant/json
   name: Latest Version
   value_template: "{{ value_json.info.version }}"
   scan_interval: 3600

# Установленная версия HA
#  -  platform: command_line
#     name: Installed version
    # command: "head -5 /usr/share/hassio/homeassistant/.HA_VERSION"
    # command: "head -5 /home/homeassistant/.homeassistant/.HA_VERSION"

# - platform: command_line
#     name: HA Installed Version
#     command: /srv/homeassistant/bin/hass --version
#     scan_interval: 86400    

#  - platform: rest
#    resource: http://IP:8123/api/states/sensor.online_custom?api_password=qwerty
#    name: orange2_state
#    force_update: true
#    value_template: '{{ value_json.state }}'

# # CUSTOM COMPONENT attributes
#  - platform: attributes
#    friendly_name: "Batteries"
#    attribute: battery_level
#    unit_of_measurement: "%"
#    entities:
#     - binary_sensor.door_entry

 
